name: CMake

on: [push, pull_request]

env:
  BUILD_TYPE: Release
  BUNDLE_ID: com.mach1.notepad
  VERSION: 1.0.2

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy: 
      matrix:
        os: [macos-latest, windows-2016]

    steps:
    - uses: actions/checkout@v3

    - name: Submodule JUCE
      uses: actions/checkout@v3
      with:
        repository: juce-framework/JUCE
        path: JUCE
        ref: '7.0.9'

    - name: Submodule JUCE_deps
      uses: actions/checkout@v3
      with:
        repository: Mach1Studios/m1-juce-deps
        path: JUCE_deps
        ssh-key: ${{ secrets.HIMWHO_SSH_KEY }}
        lfs: true
    
    - name: LFS pull submodule
      run: git -C JUCE_deps lfs pull

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake (macos)
      if: runner.os == 'MacOS'
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Configure CMake (windows)
      if: runner.os == 'Windows'
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: cmake $GITHUB_WORKSPACE -A x64 -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: cmake --build . --config $BUILD_TYPE

    - name: Create DMG, Notarize and Staple (macOS)
      if: runner.os == 'MacOS'
      run: |
        # workaround for https://github.com/LinusU/node-appdmg/issues/234
        python3 -m pip install setuptools --break-system-packages
        npm install -g appdmg
        mkdir -p packaging/dmg

        # Create directories for the dmg symlinks
        sudo mkdir -m 755 -p /Library/Audio/Plug-Ins/Components && sudo mkdir -m 755 -p /Library/Audio/Plug-Ins/VST3 && sudo mkdir -m 755 -p /Library/Application\ Support/Avid/Audio/Plug-Ins
        ln -s /Library/Audio/Plug-Ins/Components "packaging/dmg/Your Mac's Component folder"
        ln -s /Library/Audio/Plug-Ins/VST3 "packaging/dmg/Your Mac's VST3 folder"
        ln -s /Library/Application\ Support/Avid/Audio/Plug-Ins "packaging/dmg/Your Mac's AAX folder"
        mv ${DIST_DIR}/VST3/M1-Notepad.vst3 packaging/dmg
        mv "${DIST_DIR}/AU/M1-Notepad.component" packaging/dmg
        mv "${DIST_DIR}/AAX/M1-Notepad.aaxplugin" packaging/dmg

        # Run appdmg to create the .dmg
        cd packaging && appdmg dmg.json "M1-Notepad.dmg"
        xcrun notarytool submit "M1-Notepad.dmg" --apple-id ${{ secrets.APPLE_USERNAME }} --password ${{ secrets.ALTOOL_APPPASS }} --team-id ${{ secrets.APPLE_TEAM_CODE }} --wait
        xcrun stapler staple "M1-Notepad.dmg"

    - name: InnoSetup Installer (windows)
      if: runner.os == 'Windows'
      working-directory: ${{runner.workspace}}/build
      run: |
        "%programfiles(x86)%\Inno Setup 6\iscc.exe" /DBuildDir="${{runner.workspace}}\build\M1-Notepad_artefacts\Release" "${{runner.workspace}}\M1-Notepad\Resources\InnoSetup.iss"
      shell: cmd

    - name: 'Upload Artifact (macos)'
      if: runner.os == 'MacOS'
      uses: actions/upload-artifact@v2
      with:
        name: M1-Notepad (MacOS)
        path: ${{runner.workspace}}/build/M1-Notepad_artefacts/Release/M1-Notepad.dmg
        if-no-files-found: error

    - name: 'Upload Artifact (windows)'
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v2
      with:
        name: M1-Notepad (Windows)
        path: ${{runner.workspace}}\build\M1-Notepad_artefacts\Release\Output\M1-Notepad_WIN.exe
        if-no-files-found: error